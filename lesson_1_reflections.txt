How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I can focus only the parts that are different

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If something is messed up in the new version, I can simply go to an old version which works, instead of remembering what has been written in the old version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Avoid saving unnecessary or meaningless files (e.g. editing in progress which don't work, or don't have meaningful differences from other versions)  
    Cons: It's possible we forget to save an important version before accidents or system crashes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is more used for saving codes, which more often involves many inter-correlated files. Less likely so for Google Docs.

How can you use the commands git log and git diff to view the history of files?

    git log to check history of commits; git diff to compare two commits

How might using version control make you more confident to make changes that
could break something?

    If something goes wrong, I can go back to past versions

Now that you have your workspace set up, what do you want to try using Git for?

    Writing something...
